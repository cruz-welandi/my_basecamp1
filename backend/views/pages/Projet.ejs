<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Home</title>
</head>
<body>
    <nav class="flex py-3 justify-between px-5">
        <a href="/views/Home" class="w-[70px]"><img src="/views/assets/logo.png" alt="logo" ></div>
            <div class="flex gap-5">
               <a href="/views/createProjet" class="bg-gray-200 font-bold flex items-center px-2 py-2 gap-2 rounded-lg"><img src="/views/assets/Vector.png" alt="" class="w-[20px]">
                add projet
               </a>
    
                 <a href="/views/editProjet" class="bg-gray-200 font-bold flex items-center px-2 py-2 gap-2 rounded-lg"><img src="/views/assets/icon _edit_.png" alt="" class="w-[20px]">
                edit projet
               </a>

               <a href="/views/profil" class="bg-gray-200 font-bold flex items-center px-4 py-2 gap-2 rounded-lg">Profil<img src="/views/assets/parametres-cog.png " class="w-[20px] " alt="Profil"></a>

            </div>
        </nav>
    
     <h1 class="text-3xl font-bold flex pl-[40%] py-2">Projects</h1>

      <div class="flex flex-col gap-y-5 w-full px-8">
        <div class="mt-8 flex flex-col gap-y-3">
            <h2 class="text-2xl font-semibold">Projets Créés</h2>
            <div id="userProjectsContainer" class="flex gap-x-3">

            </div>
        </div>
        
        <div class="mt-8 flex flex-col gap-y-3">
            <h2 class="text-2xl font-semibold">Projets Partagés avec Moi</h2>
            <div id="projectsAddedToContainer" class="flex gap-x-3">

            </div>
        </div>
      </div>
    <script>

                async function deleteProjet(projetId) {
                    try {
                        const responseDelete = await fetch(`http://localhost:5000/api/deleteProjet`, {
                            method: 'DELETE', 
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            credentials: 'include',
                            body: JSON.stringify({ projectId: projetId })
                        });

                        if (!responseDelete.ok) { // Vérification si la requête n'a pas réussi
                            throw new Error('Échec de la suppression du projet');
                        }

                        const result = await responseDelete.json();
                         
                        window.location.reload();
                        alert("Projet supprimé avec succès !");
                        

                    } catch (error) {
                        console.error("Erreur lors de la suppression du projet", error);
                        alert("Erreur lors de la suppression du projet : " + error.message);
                    }
                }

        async function fetchAndDisplayProjects() {
            try {
                const response = await fetch('http://localhost:5000/api/listProjet');
                const { userProjects, projectsAddedTo } = await response.json();
                // Sélecteur pour les conteneurs
                const userProjectsContainer = document.getElementById('userProjectsContainer');
                const projectsAddedToContainer = document.getElementById('projectsAddedToContainer');

                // Mapper et afficher userProjects
                userProjects.forEach(project => {
                    const projectElement = document.createElement('div');
                    projectElement.classList.add('p-4', 'mb-4', 'shadow', 'rounded-lg', 'bg-white', 'w-[230px]', 'grid', 'grid-clos-6'); // Tailwind classes
                    // Icône SVG de suppression
                    const deleteIconSVG = projectId => `
                            <button onclick='deleteProjet(${projectId})'>
                                <svg class="fill-current text-red-500 hover:text-red-700 cursor-pointer" width="24" height="24" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <title>Supprimer</title>
                                    <path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 12.196l-2.651 2.653a1.2 1.2 0 1 1-1.697-1.697L8.303 10.5 5.651 7.848a1.2 1.2 0 1 1 1.697-1.697L10 8.803l2.651-2.652a1.2 1.2 0 1 1 1.697 1.697L11.697 10.5l2.651 2.651a1.2 1.2 0 0 1 0 1.698z"/>
                                </svg>
                            </button>    
                    `;
                    projectElement.innerHTML = `
                        <div class="flex justify-between">
                            <h3 class="text-lg font-bold mb-2">${project.nameProjet}</h3>
                            ${deleteIconSVG(project.Id)}
                        </div>
                        <p>${project.desProjet}</p>
                        <p class="text-sm text-gray-600 mt-2">Créé par: ${project.Email} ${project.Id}</p>
                    `;
                    userProjectsContainer.appendChild(projectElement);
                });

                // Mapper et afficher projectsAddedTo
                projectsAddedTo.forEach(project => {
                    const projectElement = document.createElement('div');
                    projectElement.classList.add('p-4', 'mb-4', 'shadow', 'rounded-lg', 'bg-white', 'w-[230px]'); // Tailwind classes
                    // Icône SVG de suppression
                    const deleteIconSVG = projectId => `
                            <button onclick="deleteProjet(${projectId})">
                                <svg class="fill-current text-red-500 hover:text-red-700 cursor-pointer" width="24" height="24" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <title>Supprimer</title>
                                    <path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 12.196l-2.651 2.653a1.2 1.2 0 1 1-1.697-1.697L8.303 10.5 5.651 7.848a1.2 1.2 0 1 1 1.697-1.697L10 8.803l2.651-2.652a1.2 1.2 0 1 1 1.697 1.697L11.697 10.5l2.651 2.651a1.2 1.2 0 0 1 0 1.698z"/>
                                </svg>
                            </button>    
                        `;

                    projectElement.innerHTML = `
                        <div class="flex justify-between">
                            <h3 class="text-lg font-bold mb-2">${project.nameProjet}</h3>
                            ${deleteIconSVG(project.Id)}
                        </div>
                        <p>${project.desProjet}</p>
                        <p class="text-sm text-gray-600 mt-2">Créé par: ${project.Email}</p>
                    `;
                    projectsAddedToContainer.appendChild(projectElement);
                });
            } catch (error) {
                console.error("Erreur lors de la récupération des données de l'API", error);
                alert("Erreur interne du serveur");
            }
        }

        
        fetchAndDisplayProjects();
    </script>
</body>
</html>
